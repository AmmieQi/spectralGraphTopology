// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// _LOp
MatrixXd _LOp(VectorXd w, int n);
RcppExport SEXP _spectralGraphTopology__LOp(SEXP wSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< VectorXd >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(_LOp(w, n));
    return rcpp_result_gen;
END_RCPP
}
// _LStarOp
VectorXd _LStarOp(MatrixXd Y);
RcppExport SEXP _spectralGraphTopology__LStarOp(SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< MatrixXd >::type Y(YSEXP);
    rcpp_result_gen = Rcpp::wrap(_LStarOp(Y));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _spectralGraphTopology_LOp(SEXP, SEXP);
RcppExport SEXP _spectralGraphTopology_LStarOp(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_spectralGraphTopology__LOp", (DL_FUNC) &_spectralGraphTopology__LOp, 2},
    {"_spectralGraphTopology__LStarOp", (DL_FUNC) &_spectralGraphTopology__LStarOp, 1},
    {"_spectralGraphTopology_LOp",     (DL_FUNC) &_spectralGraphTopology_LOp,     2},
    {"_spectralGraphTopology_LStarOp", (DL_FUNC) &_spectralGraphTopology_LStarOp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_spectralGraphTopology(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
